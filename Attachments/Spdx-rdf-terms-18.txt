
Namespace(rdf	= <http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Namespace(owl	= <http://www.w3.org/2002/07/owl#>)
Namespace(xsd	= <http://www.w3.org/2001/XMLSchema#>)
Namespace(rdfs	= <http://www.w3.org/2000/01/rdf-schema#>)
Namespace(a	= <http://spdx.org/rdf/terms#>)
Namespace(b	= <http://usefulinc.com/ns/doap#>)
Namespace(c	= <#>)
Namespace(d	= <http://www.w3.org/1999/xhtml/vocab#>)
Namespace(e	= <http://www.w3.org/2003/06/sw-vocab-status/ns#>)

Ontology( <http://spdx.org/rdf/terms>

 Annotation(rdfs:comment "
          <p>This specification describes the SPDX language, defined as a dictionary of named properties and classes using W3C's RDF Technology.</p>

          <p>SPDX is a designed to allow the exchange of data about software packages.  This information includes general information about the package, licensing information about the package as a whole, a manifest of files contained in the package and licensing information related to the contained files.</p>
        "^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
 Annotation(owl:versionInfo "1.0")

 ObjectProperty(a:algorithm
  domain(a:Checksum)
  range(oneOf(a:checksumAlgorithm_sha1)))
 ObjectProperty(a:artifactOf
  domain(a:File)
  range(b:Project))
 ObjectProperty(a:checksum
  domain(unionOf(a:Package a:File))
  range(a:Checksum))
 ObjectProperty(a:copyrightText
  domain(unionOf(a:Package a:File))
  range(unionOf(<#genid-NoneClass> <#genid-NoAssertionClass> rdfs:Literal)))
 ObjectProperty(a:creationInfo
  domain(a:SpdxDocument)
  range(a:CreationInfo))
 ObjectProperty(a:dataLicense
  domain(a:SpdxDocument)
  range(oneOf(<http://spdx.org/licenses/PDDL-1.0>)))
 ObjectProperty(a:describesPackage
  domain(a:SpdxDocument)
  range(a:Package))
 ObjectProperty(a:fileType
  domain(a:File)
  range(oneOf(a:fileType_source a:fileType_other a:fileType_archive a:fileType_binary)))
 ObjectProperty(a:hasExtractedLicensingInfo
  domain(a:SpdxDocument)
  range(a:ExtractedLicensingInfo))
 ObjectProperty(a:hasFile
  domain(a:Package)
  range(a:File))
 ObjectProperty(a:licenseConcluded
  domain(unionOf(a:Package a:File))
  range(unionOf(<#genid-NoneClass> <#genid-NoAssertionClass> a:AnyLicenseInfo)))
 ObjectProperty(a:licenseDeclared
  domain(a:Package)
  range(unionOf(<#genid-NoneClass> <#genid-NoAssertionClass> a:AnyLicenseInfo)))
 ObjectProperty(a:licenseInfoFromFiles
  domain(a:Package)
  range(unionOf(a:SimpleLicenseInfo <#genid-NoneClass> <#genid-NoAssertionClass>)))
 ObjectProperty(a:licenseInfoInFile
  domain(a:File)
  range(unionOf(a:SimpleLicenseInfo <#genid-NoneClass> <#genid-NoAssertionClass>)))
 ObjectProperty(a:member
  domain(unionOf(a:DisjunctiveLicenseSet a:ConjunctiveLicenseSet))
  range(a:AnyLicenseInfo))
 ObjectProperty(a:originator
  domain(a:Package)
  range(unionOf(<#genid-NoAssertionClass> xsd:string)))
 ObjectProperty(a:packageVerificationCode)
 ObjectProperty(a:packageVerificationCodeValue)
 ObjectProperty(a:referencesFile)
 ObjectProperty(a:reviewDate)
 ObjectProperty(a:reviewer)
 ObjectProperty(a:sourceInfo)
 ObjectProperty(a:specVersion)
 ObjectProperty(a:summary)
 ObjectProperty(a:supplier)
 ObjectProperty(a:versionInfo)
 ObjectProperty(rdf:first)
 ObjectProperty(rdf:rest)
 ObjectProperty(d:icon)
 ObjectProperty(d:stylesheet)
 ObjectProperty(rdfs:comment)

 DatatypeProperty(a:checksumValue
  domain(a:Checksum)
  range(xsd:hexBinary))
 DatatypeProperty(a:created
  domain(a:CreationInfo)
  range(xsd:dateTime))
 DatatypeProperty(a:creator
  domain(a:CreationInfo)
  range(xsd:string))
 DatatypeProperty(a:description
  domain(a:Package)
  range(xsd:string))
 DatatypeProperty(a:downloadLocation
  domain(a:Package)
  range(xsd:anyURI))
 DatatypeProperty(a:extractedText
  domain(a:ExtractedLicensingInfo)
  range(xsd:string))
 DatatypeProperty(a:fileName
  domain(a:File)
  range(xsd:string))
 DatatypeProperty(a:licenseComments
  domain(unionOf(a:Package a:File))
  range(xsd:string))
 DatatypeProperty(a:licenseId
  domain(unionOf(a:License a:ExtractedLicensingInfo))
  range(xsd:string))
 DatatypeProperty(a:licenseText
  domain(a:License)
  range(xsd:string))
 DatatypeProperty(a:name
  domain(a:Package)
  range(xsd:string))
 DatatypeProperty(a:packageFileName
  domain(a:Package)
  range(xsd:string))
 DatatypeProperty(e:term_status)

 Class(<#genid-NoAssertionClass> partial)
 Class(<#genid-NoneClass> partial)
 Class(a:AnyLicenseInfo complete 
  unionOf(a:DisjunctiveLicenseSet a:License a:ConjunctiveLicenseSet a:ExtractedLicensingInfo))
 Class(a:AnyLicenseInfo partial 
  annotation(rdfs:comment "The <code>AnyLicenseInfo</code> class includes all resources that represent licensing information."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
)
 Class(a:Checksum partial 
  restriction(a:checksumValue cardinality(1))
  restriction(a:algorithm cardinality(1)))
 Class(a:Checksum partial 
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
  annotation(rdfs:comment "A <code>Checksum</code> is value that allows the contents of a file to be authenticated.  Even small changes to the content of the file will change it's checksum.  This class allows the results of a variety of checksum and cryptographic message digest algorithms to be represented."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
)
 Class(a:ConjunctiveLicenseSet partial 
  restriction(a:member minCardinality(2))
  rdfs:Container)
 Class(a:ConjunctiveLicenseSet partial 
  annotation(rdfs:comment "A <code>ConjunctiveLicenseSet</code> represents a set of <a href=\"#AnyLicenseInfo\">licensing information</a> all of which apply."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
)
 Class(a:CreationInfo partial 
  restriction(a:creator minCardinality(1))
  restriction(a:created cardinality(1))
  restriction(rdfs:comment maxCardinality(1)))
 Class(a:CreationInfo partial 
  annotation(rdfs:comment "A <code>CreationInfo</code> provides information about the individuals, organizations and tools involved in the creation of an <a href=\"#SpdxDocument\"><code>SpdxDocument</code></a>."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
)
 Class(a:DisjunctiveLicenseSet partial 
  restriction(a:member minCardinality(2))
  rdfs:Container)
 Class(a:DisjunctiveLicenseSet partial 
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
  annotation(rdfs:comment "A <code>DisjunctiveLicenseSet</code> represents a set of <a href=\"#AnyLicenseInfo\">licensing information</a> where only one license applies at a time.  This class implies that the recipient gets to choose one of these licenses they would prefer to use."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
)
 Class(a:ExtractedLicensingInfo partial 
  restriction(a:licenseId cardinality(1))
  restriction(a:extractedText cardinality(1)))
 Class(a:ExtractedLicensingInfo partial 
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
  annotation(rdfs:comment "An <code>ExtractedLicensingInfo</code> represents a license or licensing notice that was found in the package.  Any license text that is recognized as a license may be represented as a <a href=\"#License\"><code>License</code></a> rather than an <code>ExtractedLicensingInfo</code>."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
)
 Class(a:File partial 
  restriction(a:fileType maxCardinality(1))
  restriction(a:copyrightText cardinality(1))
  restriction(a:licenseComments maxCardinality(1))
  restriction(a:licenseConcluded cardinality(1))
  restriction(a:checksum cardinality(1))
  restriction(a:licenseInfoInFile minCardinality(1))
  restriction(a:fileName cardinality(1))
  restriction(a:artifactOf maxCardinality(1)))
 Class(a:File partial 
  annotation(rdfs:comment "A <code>File</code> represents a named sequence of information that is contained in a software package."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
)
 Class(a:License partial 
  restriction(a:licenseId cardinality(1))
  restriction(a:licenseText cardinality(1)))
 Class(a:License partial 
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
  annotation(rdfs:comment "A <code>License</code> represents a software copyright license.  This class is used by the SPDX license list to represent standard licenses."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
)
 Class(a:Package partial 
  restriction(a:downloadLocation cardinality(1))
  restriction(a:copyrightText cardinality(1))
  restriction(a:licenseComments maxCardinality(1))
  restriction(a:versionInfo maxCardinality(1))
  restriction(a:packageFileName cardinality(1))
  restriction(a:name cardinality(1))
  restriction(a:checksum maxCardinality(1))
  restriction(a:description maxCardinality(1))
  restriction(a:licenseDeclared cardinality(1))
  restriction(a:originator maxCardinality(1))
  restriction(a:hasFile minCardinality(1))
  restriction(a:licenseConcluded cardinality(1))
  restriction(a:supplier maxCardinality(1))
  restriction(a:summary maxCardinality(1))
  restriction(a:sourceInfo maxCardinality(1))
  restriction(a:packageVerificationCode cardinality(1))
  restriction(a:licenseInfoFromFiles minCardinality(1)))
 Class(a:Package partial 
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
  annotation(rdfs:comment "A <code>Package</code> represents a collection of software files that are delivered as a single functional component."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
)
 Class(a:PackageVerificationCode partial 
  restriction(a:packageVerificationCodeValue cardinality(1)))
 Class(a:PackageVerificationCode partial 
  annotation(rdfs:comment "A <code>PackageVerificationCode</code> is a value that allows authentication of the package.  This differs from the <a href=\"#Checksum\"><code>Checksum</code></a> in that it uses an algorithm that allows the SPDX file to be embedded in the package.  This verification code is produced using a cryptographic hash algorithm applied to a manifest of the package.  Some files in the package (e.g. the SPDX files) are explicitly excluded from the verification code.  This allows those excluded files to not impact the verification code."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
)
 Class(a:Review partial 
  restriction(a:reviewer cardinality(1))
  restriction(a:reviewDate cardinality(1))
  restriction(rdfs:comment maxCardinality(1)))
 Class(a:Review partial 
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
  annotation(rdfs:comment "A <code>Review</code> represents an audit and signoff by an individual, organization or tool on the information in an <a href=\"#SpdxDocument\"><code>SpdxDocument</code></a>."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
)
 Class(a:SimpleLicenseInfo complete 
  unionOf(a:License a:ExtractedLicensingInfo))
 Class(a:SimpleLicenseInfo partial 
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
  annotation(rdfs:comment "The <code>SimpleLicenseInfo</code> class includes all resources that represent simple, atomic, licensing information."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
)
 Class(a:SpdxDocument partial 
  restriction(a:specVersion cardinality(1))
  restriction(a:referencesFile minCardinality(1))
  restriction(a:dataLicense cardinality(1))
  restriction(a:creationInfo cardinality(1))
  restriction(a:describesPackage cardinality(1)))
 Class(a:SpdxDocument partial 
  annotation(rdfs:comment "An <code>SdpxDocument</code> is a summary of the contents, provenance, ownership and licensing analysis of a specific software package.  This is, effectively, the top level of SPDX information."^^http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral)
  annotation(rdfs:isDefinedBy http://spdx.org/rdf/terms)
)
 Class(b:Project partial)
 Class(rdfs:Container partial)
 Class(rdfs:Literal partial)
 Class(xsd:string partial)

 AnnotationProperty(rdfs:comment)
 AnnotationProperty(rdfs:isDefinedBy)
 AnnotationProperty(owl:versionInfo)

 Individual(<http://spdx.org/licenses/PDDL-1.0>)
 Individual(<http://spdx.org/rdf/terms>
  value(d:stylesheet <http://spdx.org/sites/all/themes/spdx/zen.css?a>)
  value(d:stylesheet <http://spdx.org/sites/all/themes/spdx/universe_nav.css?a>)
  value(d:stylesheet <http://spdx.org/sites/all/themes/spdx/style.css?a>)
  value(d:icon <http://spdx.org/sites/all/themes/spdx/favicon.ico>))
 Individual(a:AnyLicenseInfo
  value(e:term_status "stable"))
 Individual(a:Checksum
  value(e:term_status "stable"))
 Individual(a:ConjunctiveLicenseSet
  value(e:term_status "stable"))
 Individual(a:CreationInfo
  value(e:term_status "stable"))
 Individual(a:DisjunctiveLicenseSet
  value(e:term_status "stable"))
 Individual(a:ExtractedLicensingInfo
  value(e:term_status "stable"))
 Individual(a:File
  value(e:term_status "stable"))
 Individual(a:License
  value(e:term_status "stable"))
 Individual(a:Package
  value(e:term_status "stable"))
 Individual(a:PackageVerificationCode
  value(e:term_status "stable"))
 Individual(a:Review
  value(e:term_status "stable"))
 Individual(a:SimpleLicenseInfo
  value(e:term_status "stable"))
 Individual(a:SpdxDocument
  value(e:term_status "stable"))
 Individual(a:algorithm
  value(e:term_status "stable"))
 Individual(a:artifactOf
  value(e:term_status "stable"))
 Individual(a:checksum
  value(e:term_status "stable"))
 Individual(a:checksumAlgorithm_sha1)
 Individual(a:checksumValue
  value(e:term_status "stable"))
 Individual(a:copyrightText
  value(e:term_status "stable"))
 Individual(a:created
  value(e:term_status "stable"))
 Individual(a:creationInfo
  value(e:term_status "stable"))
 Individual(a:creator
  value(e:term_status "stable"))
 Individual(a:dataLicense
  value(e:term_status "stable"))
 Individual(a:describesPackage
  value(e:term_status "stable"))
 Individual(a:description
  value(e:term_status "stable"))
 Individual(a:downloadLocation
  value(e:term_status "stable"))
 Individual(a:extractedText
  value(e:term_status "stable"))
 Individual(a:fileName
  value(e:term_status "stable"))
 Individual(a:fileType
  value(e:term_status "stable"))
 Individual(a:fileType_archive)
 Individual(a:fileType_binary)
 Individual(a:fileType_other)
 Individual(a:fileType_source)
 Individual(a:hasExtractedLicensingInfo
  value(e:term_status "stable"))
 Individual(a:hasFile
  value(e:term_status "stable"))
 Individual(a:licenseComments
  value(e:term_status "stable"))
 Individual(a:licenseConcluded
  value(e:term_status "stable"))
 Individual(a:licenseDeclared
  value(e:term_status "stable"))
 Individual(a:licenseId
  value(e:term_status "stable"))
 Individual(a:licenseInfoFromFiles
  value(e:term_status "stable"))
 Individual(a:licenseInfoInFile
  value(e:term_status "stable"))
 Individual(a:licenseText
  value(e:term_status "stable"))
 Individual(a:member
  value(e:term_status "stable"))
 Individual(a:name
  value(e:term_status "stable"))
 Individual(a:originator
  value(e:term_status "stable"))
 Individual(a:packageFileName
  value(e:term_status "stable"))
 Individual(<http://spdx.org/sites/all/themes/spdx/favicon.ico>)
 Individual(<http://spdx.org/sites/all/themes/spdx/style.css?a>)
 Individual(<http://spdx.org/sites/all/themes/spdx/universe_nav.css?a>)
 Individual(<http://spdx.org/sites/all/themes/spdx/zen.css?a>)
 Individual(rdf:nil)

)

